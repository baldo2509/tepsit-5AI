<?xml version="1.0" encoding="UTF-8"?>

<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>Tepsit.pasqualetti.maven.webapp</groupId>
	<artifactId>Helloweb</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>war</packaging>

	<name>Helloweb Maven Webapp</name>
	<!-- FIXME change it to the project's website -->
	<url>https://github.com/baldo2509/tepsit-5AI/tree/main/helloweb</url>
	<developers>
		<developer>
			<name>Francesco Ciofi</name>
			<roles>
				<role>Original Author</role>
			</roles>
			<organization>html.it</organization>
			<organizationUrl>
				https://www.html.it/pag/60987/restful-web-services-in-java-con-jersey-introduzione/</organizationUrl>
		</developer>
		<developer>
			<name>Alessandro Pasqualetti</name>
			<roles>
				<role>Studente</role>
			</roles>
			<organization>ITI "G.Marconi" di Pontedera, Italy</organization>
			<organizationUrl>https://www.marconipontedera.edu.it/</organizationUrl>
		</developer>
	</developers>
	<description>
		Questo progetto rappresenta i primi passi per creare un software in Java
		che fa uso di tecnologia Web e Maven. In particolare vederemo come usare
		Maven per partire da un modello, gestire le dipendenze del software ed
		effettuare i test del software.
		Java per sperimentare con JAX-RS per implementare servizi REST e JSP
		come
		alternativa e paralallelo alla tecnolgia PHP.
		Questo progetto si basa sulla guida scritta da Francesco Ciofi
		https://www.html.it/pag/60987/restful-web-services-in-java-con-jersey-introduzione/
	</description>
	<organization>
		<name>ITI "G.Marconi" Pontedera (PI)</name>
		<url>https://www.marconipontedera.edu.it/</url>
	</organization>
	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<maven.compiler.source>8</maven.compiler.source>
		<maven.compiler.target>8</maven.compiler.target>
	</properties>

	<dependencies>
		<dependency>
			<groupId>org.glassfish.jersey.containers</groupId>
			<artifactId>jersey-container-servlet</artifactId>
			<version>2.23.2</version>
		</dependency>
		<dependency>
			<groupId>org.glassfish.jersey.media</groupId>
			<artifactId>jersey-media-moxy</artifactId>
			<version>2.23.2</version>
		</dependency>
	</dependencies>

	<build>
		<finalName>Helloweb</finalName>
		<pluginManagement><!-- lock down plugins versions to avoid using Maven
			defaults (may be moved to parent pom) -->
			<plugins>
				<plugin>
					<groupId>org.eclipse.jetty</groupId>
					<artifactId>jetty-maven-plugin</artifactId>
					<version>9.3.11.v20160721</version>
					<configuration>
						<scanIntervalSeconds>10</scanIntervalSeconds>
					</configuration>
					<dependencies>
						<!-- JAXB API -->
						<dependency>
							<groupId>javax.xml.bind</groupId>
							<artifactId>jaxb-api</artifactId>
							<version>2.3.1</version>
						</dependency>
						<!-- JAXB Implementation -->
						<dependency>
							<groupId>com.sun.xml.bind</groupId>
							<artifactId>jaxb-core</artifactId>
							<version>2.3.0.1</version>
						</dependency>
						<dependency>
							<groupId>com.sun.xml.bind</groupId>
							<artifactId>jaxb-impl</artifactId>
							<version>2.3.1</version>
						</dependency>
					</dependencies>
				</plugin>
				<plugin>
					<artifactId>maven-clean-plugin</artifactId>
					<version>3.4.0</version>
				</plugin>
				<!-- see
				http://maven.apache.org/ref/current/maven-core/default-bindings.html#Plugin_bindings_for_war_packaging -->
				<plugin>
					<artifactId>maven-resources-plugin</artifactId>
					<version>3.3.1</version>
				</plugin>
				<plugin>
					<artifactId>maven-compiler-plugin</artifactId>
					<version>3.5.1</version>
					<configuration>
						<source>1.8</source>
						<target>1.8</target>
					</configuration>
				</plugin>
				<plugin>
					<artifactId>maven-surefire-plugin</artifactId>
					<version>3.3.0</version>
				</plugin>
				<plugin>
					<artifactId>maven-war-plugin</artifactId>
					<version>3.4.0</version>
					<configuration>
						<failOnMissingWebXml>false</failOnMissingWebXml>
					</configuration>
				</plugin>
				<plugin>
					<artifactId>maven-install-plugin</artifactId>
					<version>3.1.2</version>
				</plugin>
				<plugin>
					<artifactId>maven-deploy-plugin</artifactId>
					<version>3.1.2</version>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>
</project>
